(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[172],{381:function(e,n,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs",function(){return r(6925)}])},1314:function(e,n,r){"use strict";r.d(n,{rm:function(){return g}});var t=r(5893),s=r(7948),i=r(9008),o=r(1664),l=r(2293),a=r(3321),h=r(9226),c=r(155),d=r(5861);function u(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{},t=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),t.forEach((function(n){u(e,n,r[n])}))}return e}function f(e,n){if(null==e)return{};var r,t,s=function(e,n){if(null==e)return{};var r,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(s[r]=e[r]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var j=function(e){var n=e.href,r=e.children,s=f(e,["href","children"]);return(0,t.jsx)(o.default,{href:n,passHref:!0,children:(0,t.jsx)(a.Z,p({sx:{color:"white"},color:"error"},s,{children:r}))})},x=function(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.default,{children:(0,t.jsx)("title",{children:"ABR Brush Viewer"})}),(0,t.jsx)(l.Z,{position:"sticky",children:(0,t.jsxs)(c.Z,{children:[(0,t.jsx)(d.Z,{variant:"h6",color:"inherit",component:"div",children:(0,t.jsx)(o.default,{href:"/",children:"ABR Brush Viewer"})}),(0,t.jsx)(h.Z,{flexGrow:1}),(0,t.jsx)(j,{href:"/docs",children:"Documentation"}),(0,t.jsx)(j,{href:"https://www.github.com/jlai/brush-viewer",children:"Github"})]})})]})},b=function(e){var n=e.children,r=e.padding;return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(x,{}),(0,t.jsx)("main",{style:{padding:r},children:n})]})},g=function(e){var n=e.children;return(0,t.jsx)(b,{children:(0,t.jsx)(s.Z,{children:n})})}},6925:function(e,n,r){"use strict";r.r(n);var t=r(5893),s=r(1314);n.default=function(e){var n=void 0===e?{}:e,r=function(){var e=Object.assign({h1:"h1",h2:"h2",p:"p",ol:"ol",li:"li",strong:"strong",a:"a"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{children:"ABR Brush Viewer/Exporter"}),"\n",(0,t.jsx)(e.h2,{children:"What is it?"}),"\n",(0,t.jsx)(e.p,{children:"An online tool to view and export brush images from .abr files.\nNo installation necessary and parsing and export happens entirely in your\nbrowser."}),"\n",(0,t.jsx)(e.h2,{children:"What versions are supported?"}),"\n",(0,t.jsx)(e.p,{children:"Currently just v6 and v10. Older versions will be added at a later date."}),"\n",(0,t.jsx)(e.h2,{children:"What's the output?"}),"\n",(0,t.jsx)(e.p,{children:"Grayscale PNG images intended to be used as alpha masks. Black represents full transparency and white\nrepresents full opacity. The images themselves don't have transparency."}),"\n",(0,t.jsx)(e.h2,{children:"How do I use alpha masks in Blender for texture painting?"}),"\n",(0,t.jsx)(e.p,{children:"This is a little tricky. More detailed explanation and screenshots to be added later, but in summary:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Create a new brush"}),"\n",(0,t.jsxs)(e.li,{children:["Under ",(0,t.jsx)(e.strong,{children:"Brush Settings > Texture"})," click the ",(0,t.jsx)(e.strong,{children:"+ New"})," button"]}),"\n",(0,t.jsx)(e.li,{children:"Next to the newly created texture name, click on the rightmost button that looks like two toggle sliders"}),"\n",(0,t.jsxs)(e.li,{children:["You should now be on the Texture tab (red checkerbox icon). Under ",(0,t.jsx)(e.strong,{children:"Image"})," > ",(0,t.jsx)(e.strong,{children:"Settings"})," click the Open button"]}),"\n",(0,t.jsx)(e.li,{children:"Select your brush image in the file browser"}),"\n",(0,t.jsxs)(e.li,{children:["Expand the ",(0,t.jsx)(e.strong,{children:"Alpha"})," section and make sure ",(0,t.jsx)(e.strong,{children:"Calculate"})," is checked"]}),"\n",(0,t.jsx)(e.li,{children:"You can now go back to the brush settings and adjust the mapping type, stroke, etc."}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"You can also use addons like BPainter or PBR Painter make this workflow quicker."}),"\n",(0,t.jsx)(e.h2,{children:"How do I use alpha masks in ArmorPaint?"}),"\n",(0,t.jsx)(e.p,{children:"Under brushes, click import and select your brush PNG."}),"\n",(0,t.jsx)(e.h2,{children:"Help, I encountered a bug or a .abr file that couldn't be parsed"}),"\n",(0,t.jsxs)(e.p,{children:["File a ticket on the ",(0,t.jsx)(e.a,{href:"https://github.com/jlai/brush-viewer/issues/new",children:"project issue tracker"}),". Include the error message,\nif any, and your browser/OS."]}),"\n",(0,t.jsx)(e.p,{children:"Do not attach any .abr files unless you created them yourself. If it's freely available online (or reasonably cheap),\nmention where you can download it from rather than attaching the file."}),"\n",(0,t.jsx)(e.p,{children:"Please note that I am not an expert on binary brush formats and this tool is largely possible thanks to the\nreverse-engineering efforts of others, so I have limited capability to debug issues (plus this is a side project\nI threw together in a few days)."})]})};return s.rm?(0,t.jsx)(s.rm,Object.assign({},n,{children:(0,t.jsx)(r,{})})):r()}}},function(e){e.O(0,[623,774,888,179],(function(){return n=381,e(e.s=n);var n}));var n=e.O();_N_E=n}]);