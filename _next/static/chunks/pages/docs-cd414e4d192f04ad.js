(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[172],{381:function(e,r,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs",function(){return n(6925)}])},1314:function(e,r,n){"use strict";n.d(r,{rm:function(){return g}});var t=n(5893),s=n(7948),i=n(9008),o=n(1664),a=n(2293),l=n(3321),c=n(9226),h=n(155),u=n(5861);function d(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function f(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{},t=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),t.forEach((function(r){d(e,r,n[r])}))}return e}function p(e,r){if(null==e)return{};var n,t,s=function(e,r){if(null==e)return{};var n,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(s[n]=e[n]);return s}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var j=function(e){var r=e.href,n=e.children,s=e.target,i=p(e,["href","children","target"]);return(0,t.jsx)(o.default,{href:r,passHref:!0,children:(0,t.jsx)(l.Z,f({sx:{color:"white"},color:"error"},i,{target:s},{children:n}))})},x=function(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.default,{children:(0,t.jsx)("title",{children:"ABR Brush Viewer"})}),(0,t.jsx)(a.Z,{position:"sticky",children:(0,t.jsxs)(h.Z,{children:[(0,t.jsx)(u.Z,{variant:"h6",color:"inherit",component:"div",children:(0,t.jsx)(o.default,{href:"/",children:"ABR Brush Viewer"})}),(0,t.jsx)(c.Z,{flexGrow:1}),(0,t.jsx)(j,{href:"/docs",children:"Documentation"}),(0,t.jsx)(j,{href:"https://www.github.com/jlai/brush-viewer",target:"_blank",children:"Github"})]})})]})},b=function(e){var r=e.children,n=e.padding;return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(x,{}),(0,t.jsx)("main",{style:{padding:n},children:r})]})},g=function(e){var r=e.children;return(0,t.jsx)(b,{children:(0,t.jsx)(s.Z,{children:r})})}},6925:function(e,r,n){"use strict";n.r(r);var t=n(5893),s=n(1314);r.default=function(e){var r=void 0===e?{}:e,n=function(){var e=Object.assign({h1:"h1",h2:"h2",p:"p",ol:"ol",li:"li",strong:"strong",a:"a"},r.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{children:"ABR Brush Viewer/Exporter"}),"\n",(0,t.jsx)(e.h2,{children:"What is it?"}),"\n",(0,t.jsx)(e.p,{children:"An online tool to view and export brush images from .abr files.\nNo installation necessary and parsing and export happens entirely in your browser."}),"\n",(0,t.jsx)(e.p,{children:"Some caveats: very old .abr files are not supported. So far the limited collections of brush files I've\ntested have worked, but there may be ones that can't be parsed for some reason."}),"\n",(0,t.jsx)(e.p,{children:'Only the brush "sample" images are exported. Currently this does not extract any brush parameters like jitter,\nradius, etc.'}),"\n",(0,t.jsx)(e.h2,{children:"What's the output?"}),"\n",(0,t.jsx)(e.p,{children:"Grayscale PNG images intended to be used as alpha masks. Black represents full transparency and white\nrepresents full opacity. The images themselves don't have transparency."}),"\n",(0,t.jsx)(e.p,{children:'You can use "save as" to download individual images, or the export button to download all of them to a zip.'}),"\n",(0,t.jsx)(e.h2,{children:"How do I use alpha masks in Blender for texture painting?"}),"\n",(0,t.jsx)(e.p,{children:"More detailed explanation and screenshots to be added later, but roughly:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Create a new brush"}),"\n",(0,t.jsxs)(e.li,{children:["Under ",(0,t.jsx)(e.strong,{children:"Brush Settings > Texture"})," click the ",(0,t.jsx)(e.strong,{children:"+ New"})," button"]}),"\n",(0,t.jsx)(e.li,{children:"Next to the newly created texture name, click on the rightmost button that looks like two toggle sliders"}),"\n",(0,t.jsxs)(e.li,{children:["You should now be on the Texture tab (red checkerbox icon). Under ",(0,t.jsx)(e.strong,{children:"Image"})," > ",(0,t.jsx)(e.strong,{children:"Settings"})," click the Open button"]}),"\n",(0,t.jsx)(e.li,{children:"Select your brush image in the file browser"}),"\n",(0,t.jsxs)(e.li,{children:["Expand the ",(0,t.jsx)(e.strong,{children:"Alpha"})," section and make sure ",(0,t.jsx)(e.strong,{children:"Calculate"})," is checked"]}),"\n",(0,t.jsx)(e.li,{children:"You can now go back to the brush settings and adjust the mapping type, stroke, etc."}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"You can also use addons like BPainter or PBR Painter make this workflow quicker."}),"\n",(0,t.jsx)(e.h2,{children:"How do I use alpha masks in ArmorPaint?"}),"\n",(0,t.jsx)(e.p,{children:"Under brushes, click import and select your brush PNG."}),"\n",(0,t.jsx)(e.h2,{children:"Help, I encountered a bug or a .abr file that couldn't be parsed"}),"\n",(0,t.jsxs)(e.p,{children:["File a ticket on the ",(0,t.jsx)(e.a,{href:"https://github.com/jlai/brush-viewer/issues/new",children:"project issue tracker"}),". Include the error message,\nif any, and your browser/OS. Mention if the issue occurs for specific abr files or for your browser in general."]}),"\n",(0,t.jsx)(e.p,{children:"Do not attach any .abr files unless you created them yourself. If it's freely available online (or reasonably cheap),\nmention where you can download it from rather than attaching the file."}),"\n",(0,t.jsxs)(e.p,{children:["If you like this project, feel free to leave a comment in the\n",(0,t.jsx)(e.a,{href:"https://github.com/jlai/brush-viewer/discussions",children:"public Github discussions"})]})]})};return s.rm?(0,t.jsx)(s.rm,Object.assign({},r,{children:(0,t.jsx)(n,{})})):n()}}},function(e){e.O(0,[623,774,888,179],(function(){return r=381,e(e.s=r);var r}));var r=e.O();_N_E=r}]);